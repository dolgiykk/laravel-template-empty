version: '3.5'

services:
    app:
        build:
            context: .
            args:
                debug: ${APP_DEBUG}
            dockerfile: ./docker/php81/Dockerfile
        container_name: ${COMPOSE_APP_CONTAINER}
        hostname: ${COMPOSE_APP_HOSTNAME}
        environment:
            PHP_IDE_CONFIG: ${PHP_IDE_CONFIG}
        user: '1000'
        restart: unless-stopped
        tty: true
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./docker/php81/php.ini:/usr/local/etc/php/php.ini
            - ./docker/php81/conf.d/override.ini:/usr/local/etc/php/conf.d/override.ini
            - ./docker/php81/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
            - ./docker/var/log/app:/var/log/php
            - ./docker/php81/msmtprc:/etc/msmtprc
            - ./xdebug/profiler:/xdebug/profiler
        links:
            - "db:${COMPOSE_DB_HOSTNAME}"

    webserver:
        image: nginx:alpine
        container_name: ${COMPOSE_WEBSERVER_CONTAINER}
        hostname: ${COMPOSE_WEBSERVER_HOSTNAME}
        restart: unless-stopped
        tty: true
        ports:
            - "${HTTP_PORT}:80"
        volumes:
            - ./:/var/www
            - ./docker/nginx/conf.d:/etc/nginx/conf.d
            - ./docker/var/log/nginx:/var/log/nginx
        links:
            - "app:${COMPOSE_APP_HOSTNAME}"

    db:
        build:
            context: .
            dockerfile: ./docker/postgres/Dockerfile
        container_name: ${COMPOSE_DB_CONTAINER}
        hostname: ${COMPOSE_DB_HOSTNAME}
        environment:
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_DATABASE}
        ports:
            - "${DB_PORT_HOST}:${DB_PORT}"
        volumes:
            - ./docker/var/lib/postgresql:/var/lib/postgresql-ext
            - ./docker/var/log/postgresql:/var/log/postgresql
        restart: unless-stopped
